openapi: 3.0.0
info:
  title: Claims API
  version: 1.0.0
  description: |
    El microservicio de **Claims** permite la gestión de reclamos y tipos de reclamos, así como la visualización y actualización de estados según los roles de los usuarios (cliente o admin).

paths:
  /ping:
    get:
      summary: Ping the server
      responses:
        '200':
          description: Successful response
  /claims:
    post:
      tags:
        - Claims
      summary: Realizar reclamo
      description: Permite a los usuarios crear un nuevo reclamo.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Claim'
      responses:
        '200':
          description: Reclamo creado correctamente.
    get:
      tags:
        - Claims
      summary: Ver reclamos con sus estados
      description: Devuelve todos los reclamos y sus estados.
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: claimState
          required: false # Cambia a true si quieres que sea obligatorio
          schema:
            type: string
            enum: [CREATED, IN_PROGRESS, FINALIZED, CANCELED]
          description: Filtra los reclamos por estado.
      responses:
        '200':
          description: Lista de reclamos obtenida.
          content:
            application/json:
              schema:
                type: array
                items:
                  type:
                  $ref: '#/components/schemas/Claim'
  /claims/{id}:
    get:
      tags:
        - Claims
      summary: Ver reclamo por ID
      description: Devuelve un reclamo y su estado por ID.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID del reclamo
          schema:
            type: string
      responses:
        '200':
          description: Reclamo obtenido correctamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Claim'
    put: 
      tags:
        - Claims
      summary: Actualizar estado de reclamo
      description: Permite a los usuarios actualizar el estado de un reclamo.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID del reclamo
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Claim'
      responses:
        '200':
          description: Reclamo creado correctamente.
  /claim-types:
    get:
      tags:
        - Claim Types
      summary: Ver tipos de reclamos
      description: Devuelve todos los tipos de reclamos.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de tipos de reclamos obtenida.
          content:
            application/json:
              schema:
                type: array
                items:
                  type:
                  $ref: '#/components/schemas/ClaimType'
    post:
      tags:
        - Claim Types
      summary: Crear tipo de reclamo
      description: Permite a los usuarios crear un nuevo tipo de reclamo.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClaimType'
      responses:
        '200':
          description: Tipo de reclamo creado correctamente.
  /claim-types/{id}:
    get:
      tags:
        - Claim Types
      summary: Ver tipo de reclamo por ID
      description: Devuelve un tipo de reclamo por ID.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID del tipo de reclamo
          schema:
            type: string
      responses:
        '200':
          description: Tipo de reclamo obtenido correctamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimType'
    delete:
      tags:
        - Claim Types
      summary: Eliminar tipo de reclamo por ID
      description: Elimina un tipo de reclamo por ID.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID del tipo de reclamo
          schema:
            type: string
      responses:
        '200':
          description: Tipo de reclamo eliminado correctamente.    
    
servers:
  - url: '{protocol}://{environment}/api/v1'
    description: Local
    variables:
      protocol:
        enum:
          - http
          - https
        default: http
      environment:
        enum:
          - localhost:8080
        default: localhost:8080

components:
  schemas:
    Error:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorItem'
        status:
          type: number
          example: 400
    ErrorItem:
      type: object
      properties:
        key:
          type: string
          example: app.login.invalidPassword
        message:
          type: string
          example: Invalid user or password
    TestResponse:
      type: object
      properties:
        message:
          type: string
          example: API running!
        status:
          type: number
          example: 200
    StandardResponse:
      type: object
      properties:
        message:
          type: string
          example: Successful operation
        status:
          type: number
          example: 200
    Claim:
      type: object
      properties:
        _id:
          type: string
        nombre:
          type: string
        descripcion:
          type: string
        fechaInicio:
          type: string
          format: date-time
        fechaFin:
          type: string
          format: date-time
        estadoReclamo:
          type: string
          enum:
            - CREADO
            - EN PROCESO
            - FINALIZADO
            - CANCELADO
        usuarioId:
          type: string
        resolucion:
          type: boolean
        tipoReclamo:
          $ref: '#/components/schemas/ClaimType'
    ClaimType:
      type: object
      properties:
        _id:
          type: string
        nombre:
          type: string
        descripcion:
          type: string
        fechaBaja:
          type: string
          format: date-time
  responses:
    Success:
      description: Successful operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StandardResponse'
    Unauthorized:
      description: Access token is missing or is invalid
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InternalServerError:
      description: Internal server error
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT